name: 'Terraform decommission'

on:
  push:
    # branches: [ "pre-master" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: playground
    
    env:       
      working-directory: devsecops_x_arcade_game/Terraform_configuration/env/network
      TF_CLOUD_ORGANIZATION: "anshuman-test-org"
      TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
      TF_WORKSPACE: "arcade-workspace"
      CONFIG_DIRECTORY: "./"


    defaults:
      run:
        shell: bash

    steps:
    - name: Set up environment variables
      run: |
          echo "AWS_ACCESS_KEY_ID=your-access-key-id" >> ${{ secrets.AWS_ACCESS_KEY_ID }}
          echo "AWS_SECRET_ACCESS_KEY=your-secret-access-key" >> ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
    # Repo checkout
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Install Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Terraform init
    - name: Terraform Init
      run: terraform init #../../env/network
      working-directory: ${{ env.working-directory }}


    # Terraform plan
    - name: Terraform Plan
      run: terraform plan -input=false #../../env/network
      working-directory: ${{ env.working-directory }}

    
    # Terraform apply
    - name: Terraform Destroy
      # if: github.ref == 'refs/heads/"pre-master"' && github.event_name == 'push'
      run: terraform destroy -auto-approve -input=false #../../env/network
      working-directory: ${{ env.working-directory }}

