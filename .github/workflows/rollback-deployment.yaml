name: 'Rollback Deployment'

on:
  push:
    branches: [ "pre-master" ]
  workflow_dispatch: 

permissions:
   contents: read

jobs:
  rollback:
    name: 'Rollback Deployment'
    runs-on: ubuntu-latest

    env:       
      working-directory: devsecops_x_arcade_game/Terraform_configuration/env/network
      TF_CLOUD_ORGANIZATION: "anshuman-test-org"
      TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
      TF_WORKSPACE: "arcade-workspace"
      CONFIG_DIRECTORY: "./"
      PREVIOUS_RELEASE: v

    
    defaults:
      run:
        shell: bash

    steps:

    - name: Set up environment variables
      run: |
           echo "AWS_ACCESS_KEY_ID=your-access-key-id" >> ${{ secrets.AWS_ACCESS_KEY_ID }}
           echo "AWS_SECRET_ACCESS_KEY=your-secret-access-key" >> ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Checkout
      uses: actions/checkout@v3

     #Aws IAM auth
    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ap-south-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Trigger Rollback Deployment
      run: |
        terraform init
        terraform plan -input=false -var "release_tag=${{ env.PREVIOUS_RELEASE }}"
        terraform apply -auto-approve -input=false -var "release_tag=${{ env.PREVIOUS_RELEASE }}"
      working-directory: ${{ env.working-directory }}
    
    - name: Debug Terraform Environment
      run: printenv | grep TF_VAR 
      working-directory: ${{ env.working-directory }}


